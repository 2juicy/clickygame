{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Board/Board.js","components/Title/Title.js","components/Score/Score.js","components/Footer/Footer.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","onClick","scoreCount","name","className","alt","src","concat","Wrapper","children","Board","Title","Score","Fragment","count","topCount","style","text","message","Footer","App","state","cards","textcolor","color","guesses","display","shuffleCard","_this","sort","b","Math","random","setState","guess","clearTimeout","delay","indexOf","push","setTimeout","_this2","this","components_Wrapper_Wrapper","id","href","target","rel","components_Title_Title","components_Board_Board","map","card","components_Card_Card","key","components_Footer_Footer","components_Score_Score","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a558e288.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = props => (\n  <div onClick={() => props.scoreCount(props.name)} className=\"card\">\n    <div className=\"img-container hvr-radial-out\">\n      <img alt={props.name} src={`img/${props.name}.png`} />\n    </div>\n    <div className=\"content\">\n      <strong>{props.name}</strong>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./Board.css\";\r\n\r\nconst Board = props => <div className=\"board\">{props.children}</div>;\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => (\n  <div className=\"titlebox\">\n    <h1 className=\"title\">{props.children}</h1>\n  </div>\n);\n\nexport default Title;\n","import React from \"react\";\nimport \"./Score.css\";\n\nconst Score = props => (\n  <React.Fragment>\n    <p className=\"score\">\n      <span>Score: {props.count}</span>\n      <span className=\"visi\">|</span>\n      <span>Top Score: {props.topCount}</span>\n    </p>\n    <p style={props.text} className=\"message\">\n      {props.message}\n    </p>\n  </React.Fragment>\n);\n\nexport default Score;\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"phantom\" />\r\n      <div className=\"footer\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Board from \"./components/Board\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\nimport Footer from \"./components/Footer\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    count: 0,\n    topCount: 0,\n    message:\n      \"Click on a card to earn points, but don't click on any more than once!\",\n    textcolor: { color: \"White\" },\n    guesses: [],\n    display: true\n  };\n\n  shuffleCard = () => {\n    const cards = this.state.cards.sort(function(a, b) {\n      return 0.5 - Math.random();\n    });\n    // Set this.state.cards equal to the new cards array\n    this.setState({ cards });\n  };\n\n  scoreCount = guess => {\n    if (this.state.display) {\n      this.setState({ display: false });\n    }\n    clearTimeout(this.delay);\n    if (this.state.guesses.indexOf(guess) === -1) {\n      this.state.guesses.push(guess);\n      if (this.state.count === 11) {\n        this.setState({ count: 0 });\n        this.setState({ guesses: [] });\n        this.setState({ message: \"GG YOU WIN!!!\" });\n      } else {\n        this.setState({ count: this.state.count + 1 });\n        this.setState({ message: \"Correct guess! Score Up!\" });\n        this.setState({ textcolor: { color: \"DarkGreen\" } });\n        setTimeout(() => {\n          this.setState({ textcolor: { color: \"White\" } });\n        }, 500);\n      }\n    } else {\n      this.setState({ count: 0 });\n      this.setState({ guesses: [] });\n      this.setState({\n        message: \"Incorrect guess! Game Over! Click on any card to start again.\"\n      });\n      this.setState({ textcolor: { color: \"Red\" } });\n      if (this.state.count > this.state.topCount) {\n        this.setState({ topCount: this.state.count });\n      }\n      setTimeout(() => {\n        this.setState({ textcolor: { color: \"White\" } });\n      }, 500);\n    }\n    this.shuffleCard();\n    this.delay = setTimeout(() => {\n      this.setState({\n        message:\n          \"Click on a card to earn points, but don't click on any more than once!\"\n      });\n    }, 5000);\n  };\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <Wrapper>\n        <a\n          id=\"source\"\n          href=\"https://github.com/2juicy/memorygame\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Source\n        </a>\n        {this.state.display ? <Title>Memory Game!</Title> : null}\n        <Board>\n          {this.state.cards.map(card => (\n            <Card\n              scoreCount={this.scoreCount}\n              id={card.id}\n              key={card.id}\n              name={card.name}\n            />\n          ))}\n        </Board>\n        <Footer>\n          <Score\n            count={this.state.count}\n            topCount={this.state.topCount}\n            message={this.state.message}\n            text={this.state.textcolor}\n          />\n        </Footer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}